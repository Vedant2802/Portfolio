import { createSlice } from "@reduxjs/toolkit";

const mainSlice = createSlice({
  name: "main",
  initialState: {
    userData: null,
  },
  reducers: {
    set_user_data: (state, action) => {
      state.userData = action.payload;
    },
  },
});

export const { set_user_data } = mainSlice.actions;

export default mainSlice.reducer;

/*
  The action parameter is automatically provided by Redux when you dispatch an action. Hereâ€™s how it works:

How action is passed
When you call dispatch(set_user_data(data)), the set_user_data action creator (generated by createSlice) returns an action object like:
{
  type: "main/set_user_data",
  payload: data
}
  Redux then calls your reducer with:
  state: the current state
  action: the action object above
  So, action is always the action object you dispatched, and action.payload contains the data you passed in.
  action is provided by Redux when you dispatch an action.
  It contains the type and any payload you pass.
*/
